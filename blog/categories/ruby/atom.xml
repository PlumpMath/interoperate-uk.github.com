<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Ruby | Interoperate]]></title>
  <link href="http://www.interoperate.co.uk/blog/categories/ruby/atom.xml" rel="self"/>
  <link href="http://www.interoperate.co.uk/"/>
  <updated>2012-03-06T09:12:13+00:00</updated>
  <id>http://www.interoperate.co.uk/</id>
  <author>
    <name><![CDATA[Jon Wade]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Which Ruby Blog Engine?]]></title>
    <link href="http://www.interoperate.co.uk/blog/2012/01/15/which-ruby-blog-engine/"/>
    <updated>2012-01-15T20:23:00+00:00</updated>
    <id>http://www.interoperate.co.uk/blog/2012/01/15/which-ruby-blog-engine</id>
    <content type="html"><![CDATA[<p>So, here I am at the start of 2012 with a bit of time on my hands being 'between contracts' so I thought I'd spend a bit of time updating my own website.  After a little thought, I came to the conclusion that all I really need is a blog site for me to record anything that I find remotely interesting and worth sharing.  So, with that in mind, I set about finding a solution for a blogging engine.</p>

<!-- more -->


<p>My key requirements were the usual sort of thing:</p>

<ul>
<li>Written in Ruby</li>
<li>Easily customisable</li>
<li>Quick and easy to update and deploy</li>
<li>Lightweight</li>
<li>Code highlighting support</li>
</ul>


<p>My initial approach was to try and find something that I could plug in to a Rails 3.1 application as an engine and update through a browser.  However, I generally have an aversion to Content Management Systems and didn't want anything too heavy.  I much prefer editing raw text files and don't like WYSIWYG editors.  After some pondering, I ended up at the excellent <a href="https://www.ruby-toolbox.com/">Ruby Toolbox</a> website which led me to <a href="http://octopress.org">Octopress</a> and so far I haven't been disappointed.  I took the decision to deploy it (for free) at Github Pages and so far the experience has been entirely pleasurable.  <a href="http://octopress.org">Octopress</a> is based on the <a href="https://github.com/mojombo/jekyll">Jekyll</a> static site generator that is used by Github pages.  I can't believe that I was actually considering writing my own blog engine as a mountable Rails 3.1 engine.  I was up and running within 30 minutes and most of that time was spent deciding which fonts and colour scheme to use.  Updating the website is as simple as committing to Git so if you're comfortable with that then you will find it a walk in the park.  As the author acknowledges:</p>

<p><blockquote><p>Octopress is a blogging framework for hackers. You should be comfortable running shell commands and familiar with the basics of Git. If that sounds daunting, Octopress probably isnâ€™t for you.</p><footer><strong>Brandon Mathis</strong> <cite><a href='http://octopress.org/docs/setup/'>octopress.org/docs/setup/&hellip;</a></cite></footer></blockquote></p>

<p>Posts are created using a simple rake task <code>rake new_post["My New Interesting Post"]</code>.</p>

<p>New Pages are created just as simply using <code>rake new_page["about"]</code>.</p>

<p>Once you have edited the posts using <a href="http://daringfireball.net/projects/markdown/syntax">Markdown</a> syntax, they are uploaded to Github pages using the following commands which I just wrapped up in a shell script:</p>

<p>``` bash deploy.sh</p>

<h1>!/bin/bash</h1>

<h1>This will generate the static files and deploy them to your Github pages 'master' branch</h1>

<p>rake generate
rake deploy</p>

<h1>This will deploy the source code to git 'source' branch</h1>

<p>git add .
git commit -m 'updated'
git push origin source
```</p>

<p>A big thanks to <a href="http://brandonmathis.com/">Brandon Mathis</a> for writing <a href="http://octopress.org">Octopress</a>.  It's a beautifully clean piece of code and exactly what I was looking for.  Blogging has never been so simple.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ruby Roman Numeral Method]]></title>
    <link href="http://www.interoperate.co.uk/blog/2012/01/15/ruby-roman-numeral-method/"/>
    <updated>2012-01-15T18:48:00+00:00</updated>
    <id>http://www.interoperate.co.uk/blog/2012/01/15/ruby-roman-numeral-method</id>
    <content type="html"><![CDATA[<p>Just gone live with this blog and I must say that I'm pretty impressed with <a href="http://octopress.org/">Octopress</a>.  It only took me a few minutes to get it setup and hosted on <a href="http://www.github.com/">GitHub</a> thanks to the excellent documentation.  For my first post I thought I'd check out the syntax highlighting with a simple Ruby function to extend the core Fixnum class to allow an integer to be converted to Roman numerals.  This syntax highlighting is using the <a href="http://ethanschoonover.com/solarized">Solarized</a> colour palette which has been meticulously designed to allow optimum crispness and legibility on both light and dark backgrounds.  I also use the same colour palette when using <a href="http://www.iterm2.com/#/section/home">Iterm2</a> and <a href="http://www.vim.org/">Vim</a>.</p>

<!-- more -->


<p>``` ruby Convert to Roman Numerals</p>

<h1>Add a 'to_roman' method to the core Fixnum class</h1>

<p>Fixnum.class_eval do</p>

<p>  def to_roman</p>

<pre><code>year = self
s = String.new
d = {
  1000 =&gt; "M",
   900 =&gt; "CM",
   500 =&gt; "D",
   400 =&gt; "CD",
   100 =&gt; "C",
    90 =&gt; "XC",
    50 =&gt; "L",
    40 =&gt; "XL",
    10 =&gt; "X",
     9 =&gt; "IX",
     5 =&gt; "V",
     4 =&gt; "IV",
     1 =&gt; "I"
}
d.keys.sort.reverse_each do |k|
  w,r = year.divmod(k)
  s = s + d[k] * w
  year = r
end

s
</code></pre>

<p>  end</p>

<p>end</p>

<h1>Example Usage</h1>

<p>puts 2012.to_roman => "MMXII"
```</p>
]]></content>
  </entry>
  
</feed>
